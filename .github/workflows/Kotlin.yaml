name: Kotlin

on:
  - push

jobs:
  Library:
    strategy:
      fail-fast: false
      matrix:
        target:
          - double: aarch64-linux
            runner: ubuntu-24.04-arm
          - double: x86_64-linux
            runner: ubuntu-24.04
          - double: aarch64-darwin
            runner: macos-15
          - double: x86_64-darwin
            runner: macos-13
        variant:
          - flake: ''
            artifact: ''
          - flake: '-d4'
            artifact: '-d4'
        exclude:
          - target: { double: x86_64-darwin }
            variant: { flake: '-d4' }
        include:
          - target: { double: x86_64-windows, runner: ubuntu-24.04 }
            variant: { flake: '-windows', artifact: '' }
          - target: { double: x86_64-windows, runner: ubuntu-24.04 }
            variant: { flake: '-d4-windows', artifact: '-d4' }
    runs-on: ${{ matrix.target.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Nix
        uses: cachix/install-nix-action@v31
      - name: Cache
        uses: cachix/cachix-action@v16
        with:
          name: softvare-group
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build (dependencies)
        if: ${{ matrix.variant.artifact == '-d4' }}
        run: nix build -L .#dependencies${{ matrix.variant.flake }}
      - name: Upload (dependencies)
        if: ${{ matrix.variant.artifact == '-d4' }}
        uses: actions/upload-artifact@v4
        with:
          name: ddnnife-kotlin-${{ matrix.target.double }}${{ matrix.variant.artifact }}-dependencies
          path: result
      - name: Build
        run: nix build -L .#kotlin${{ matrix.variant.flake }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ddnnife-kotlin-${{ matrix.target.double }}${{ matrix.variant.artifact }}
          path: result
